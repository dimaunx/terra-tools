apiVersion: v1
kind: ConfigMap
metadata:
  name: thanos-store-s3-config
  namespace: monitoring
data:
  thanos-store-s3.yaml: |
    type: S3
    config:
      bucket: "dgroisma-cl3-us-west-2-prom"
      endpoint: "s3.us-west-2.amazonaws.com"
      insecure: false
      http_config:
        idle_conn_timeout: 0s
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: thanos-store-s3
  namespace: monitoring
  labels:
    app: thanos-store-s3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-store-s3
  serviceName: thanos-store-s3
  template:
    metadata:
      labels:
        app: thanos-store-s3
        thanos-store-api: "true"
    spec:
      containers:
        - name: thanos
          image: quay.io/thanos/thanos:v0.10.0
          args:
            - "store"
            - "--log.level=debug"
            - "--data-dir=/data"
            - "--objstore.config-file=/config/thanos-store-s3.yaml"
            - "--index-cache-size=500MB"
            - "--chunk-pool-size=500MB"
          ports:
            - name: http
              containerPort: 10902
            - name: grpc
              containerPort: 10901
          livenessProbe:
            httpGet:
              port: 10902
              path: /-/healthy
          readinessProbe:
            httpGet:
              port: 10902
              path: /-/ready
          volumeMounts:
            - mountPath: /config/
              name: config
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: thanos-store-s3-config
---
#This service creates an internal service for querier to find about store store-api's for s3 access
apiVersion: v1
kind: Service
metadata:
  name: thanos-store-s3-svc
  namespace: monitoring
spec:
  type: ClusterIP
  ports:
    - name: grpc
      port: 10911
      targetPort: grpc
  selector:
    app: thanos-store-s3
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: thanos-store-s3-ing
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/server-snippet: |
      server_tokens "off";
spec:
  tls:
    - hosts:
        - thanos-store-us-west-2.devshell.sh
      secretName: thanos-store-tls
  rules:
    - host: thanos-store-us-west-2.devshell.sh
      http:
        paths:
          - path: /
            backend:
              serviceName: thanos-store-s3-svc
              servicePort: grpc