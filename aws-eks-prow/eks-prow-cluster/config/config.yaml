plank:
  allow_cancellations: true # whether to delete ProwJobs' pod (true) or not (false) when new instances are triggered for the same PR
  # used to link to job results for decorated jobs (with pod utilities)
  job_url_prefix: 'http://change_me_dns/view/gcs'
  # used to link to job results for non decorated jobs (without pod utilities)
  job_url_template: 'http://change_me_dns/view/gcs/change_me_bucket/pr-logs/pull/{{.Spec.Refs.Repo}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}'
  report_template: '[Full PR test history](http://change_me_dns/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})'
  default_decoration_config:
    timeout: 14400000000000 # 4h in nano seconds
    grace_period: 15000000000 # 15s in nano seconds
    utility_images: # pull specs for container images used to construct job pods
      clonerefs: "gcr.io/k8s-prow/clonerefs:v20190528-0d7c4b53a"
      initupload: "gcr.io/k8s-prow/initupload:v20190528-0d7c4b53a"
      entrypoint: "gcr.io/k8s-prow/entrypoint:v20190528-0d7c4b53a"
      sidecar: "gcr.io/k8s-prow/sidecar:v20190528-0d7c4b53a"
    gcs_configuration: # configuration for uploading job results to GCS
      bucket: change_me_bucket
      path_strategy: explicit # or `legacy`, `single`
      default_org: mcn-org # should not need this if `strategy` is set to explicit
      default_repo: test-repo # should not need this if `strategy` is set to explicit
    gcs_credentials_secret: gcs-credentials # the name of the secret that stores the GCP service account credential JSON file, it expects the secret's key to be `service-account.json`
    ssh_key_secrets:
      - ssh-secret # name of the secret that stores the bot's ssh keys for GitHub, doesn't matter what the key of the map is and it will just uses the values

deck:
  spyglass:
    size_limit: 500e+6 # 500MB
    viewers:
      "started.json|finished.json": ["metadata"]
      "build-log.txt": ["buildlog"]
      "artifacts/junit.*\\.xml": ["junit"] # Remember to escape your '\' in yaml strings!

prowjob_namespace: default
pod_namespace: test-pods
log_level: debug

size:
  s:   10
  m:   30
  l:   100
  xl:  500
  xxl: 1000

branch-protection:
  orgs:
    mcn-org:
      protect: true
      repos:
        test-repo:
          restrictions: # only allow admins
            users: []
            teams: []
          required_status_checks:
            contexts:
            - ci-mcn-go-build
            - ci-mcn-golanglint-ci

tide:
  sync_period: 2m
  queries:
  - repos:
    - mcn-org/test-repo
    labels:
    - approved
    - lgtm
    missingLabels:
    - do-not-merge
    - do-not-merge/hold
    - do-not-merge/invalid-owners-file
    - do-not-merge/work-in-progress
    - needs-rebase

merge_method:
  mcn-org/test-repo: squash

sinker:
  resync_period: 1m
  max_prowjob_age: 6h
  max_pod_age: 30m

postsubmits:
  mcn-org/test-repo:
  - name: test-postsubmit
    decorate: true
    branches:
    - ^master$
    spec:
      containers:
      - image: alpine
        command: ["/bin/printenv"]
presubmits:
  mcn-org/test-repo:
  - name: ci-mcn-go-build
    decorate: true
    always_run: true
    skip_report: false
    context: ci-mcn-go-build
    spec:
      containers:
      - image: alpine
        command: ["/bin/printenv"]
    trigger: "/test build" # Regexp, see discussion.
    rerun_command: "/test build"  # String, see discussion.
  - name: ci-mcn-golanglint-ci
    decorate: true
    always_run: true
    skip_report: false
    context: ci-mcn-golanglint-ci
    spec:
      containers:
      - image: alpine
        command: ["/bin/printenv"]
    trigger: "/test lint" # Regexp, see discussion.
    rerun_command: "/test lint"  # String, see discussion.
